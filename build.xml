<?xml version="1.0"?>
<project name="Topcoder Cache client" default="dist" basedir=".">
    <property file="${basedir}/build.version"/>

    <property name="javac.encoding" value="UTF-8" />

    <!-- COMPONENT PARAMETERS -->
    <property name="component" value="${component.name}"/>
    <property name="package" value="${component.package}"/>
    <property name="packagedir" value="${component.packagedir}"/>
    <property name="distfilename" value="${component.distfilename}"/>
    <property name="component_version"
              value="${component.version.major}.${component.version.minor}.${component.version.micro}"/>
    <property name="component_path" value="${distfilename}/${component_version}"/>
    <property name="component.target" value="1.5"/>

    <property name="testfiles_dir" value="test_files" />
    <property name="logdir" value="log" />

    <!-- Override these in ../topcoder_global.properties -->
    <property name="javadoc.locale" value="en_US"/>
    <property name="srcdir" value="src" />
    <property name="libdir" value="${basedir}/libs"/>
    <property name="debug" value="off"/>
    <property name="verbose" value="no"/>

    <!-- DIRECTORY SETUP -->
    <property name="srcdir" value="src"/>
    <property name="javasrc" value="${srcdir}/java"/>
    <property name="javamain" value="${javasrc}/main"/>
    <property name="javatests" value="${javasrc}/tests" />


    <property name="builddir" value="build"/>
    <property name="build_classdir" value="${builddir}/classes"/>
    <property name="build_testclassdir" value="${builddir}/testClasses"/>
    <property name="build_targetclassdir" value="${builddir}/targetclasses"/>
    <property name="build_distdir" value="${builddir}/dist"/>
    <property name="build_lib" value="${builddir}/lib"/>
    <property name="build_tcsdistdir" value="${build_distdir}/${distfilename}-${component_version}"/>
    <property name="manifest_file_path" value="${build_tcsdistdir}/META-INF/"/>
    <property name="manifest_file" value="${manifest_file_path}/MANIFEST.MF"/>

    <!-- COMPONENT DISTRIBUTION STRUCTURE -->
    <property name="dist_lib" value="${build_distdir}/lib/tcs"/>

    <!-- NAME FOR .JAR AND .WAR FILES -->
    <property name="component.jar" value="${dist_lib}/${component_path}/${distfilename}.jar"/>
    <property name="component.dist.jar" value="${build_distdir}/${distfilename}-${component_version}.jar"/>

    <!-- classes needed to compile the production code -->
    <path id="buildlibs">
        <pathelement location="${libdir}/jboss-cache.jar"/>
        <pathelement location="${libdir}/security.jar"/>
        <pathelement location="${libdir}/jbossall-client.jar"/>
        <pathelement location="${libdir}/shared.jar"/>
        <pathelement location="${libdir}/jedis-2.8.1.jar"/>
        <pathelement location="${libdir}/commons-pool2-2.4.2.jar"/>
        <pathelement location="${libdir}/log4j-1.2.17.jar"/>
    </path>

    <path id="testlibs">
        <path refid="buildlibs"/>
        <pathelement location="${build_classdir}"/>
        <fileset dir="${libdir}"> 
            <include name="test/*.jar"/>
         </fileset>
    </path>

    <target name="compile">
        <mkdir dir="${build_classdir}"/>
        <javac srcdir="${javamain}" destdir="${build_classdir}" includes="${packagedir}/**" debug="true"
               verbose="${verbose}" includeAntRuntime="no" target="${component.target}" source="${component.target}" fork="true">
            <classpath refid="buildlibs"/>
        </javac>
    </target>

    <target name="compile_tests" depends="compile">
        <mkdir dir="${build_testclassdir}"/>
        <javac destdir="${build_testclassdir}" debug="true" verbose="${verbose}" includeAntRuntime="no" encoding="${javac.encoding}">
            <src path="${javatests}" />
            <classpath refid="testlibs"/>
        </javac>
    </target>

    <target name="testEmbeddedRedis" depends="compile_tests">
        <mkdir dir="${logdir}"/>
        <junit fork="true" haltonerror="false">
            <classpath location="${build_testclassdir}"/>
            <classpath location="${testfiles_dir}"/>
            <classpath refid="testlibs"/>

            <test name="com.topcoder.web.common.cache.redis.RedisCacheClientEmbeddedRedisTest" todir="${logdir}">
                <formatter type="plain" usefile="true"/>
                <formatter type="xml" usefile="true"/>
            </test>
        </junit>
    </target>

    <target name="testRedis" depends="compile_tests">
        <mkdir dir="${logdir}"/>
        <junit fork="true" haltonerror="false">
            <classpath location="${build_testclassdir}"/>
            <classpath location="${testfiles_dir}"/>
            <classpath refid="testlibs"/>

            <test name="com.topcoder.web.common.cache.redis.RedisCacheClientTest" todir="${logdir}">
                <formatter type="plain" usefile="true"/>
                <formatter type="xml" usefile="true"/>
            </test>
        </junit>
    </target>

    <target name="manifest">
        <mkdir dir="${manifest_file_path}"/>
        <manifest file="${manifest_file}">
            <attribute name="Component-Vendor" value="TopCoder Inc."/>
            <attribute name="Component-Name" value="${component}"/>
            <attribute name="Component-Version" value="${component_version}.${component.version.build}"/>
        </manifest>
    </target>

    <target name="dist" depends="compile, manifest">
        <mkdir dir="${dist_lib}/${component_path}"/>
        <jar jarfile="${component.jar}" manifest="${manifest_file}" basedir="${build_classdir}"/>
    </target>

    <target name="clean">
        <delete dir="${builddir}"/>
    </target>
</project>
